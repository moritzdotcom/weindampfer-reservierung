// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  sessions Session[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Event {
  id           String        @id @default(uuid())
  name         String
  date         DateTime
  minimumSpend Int           @default(50)
  ticketPrice  Int           @default(30)
  createdAt    DateTime      @default(now())
  reservations Reservation[]
}

model Reservation {
  id                  String            @id @default(uuid())
  name                String
  email               String
  phone               String            @default("")
  streetAddress       String            @default("")
  city                String            @default("")
  zipCode             String            @default("")
  people              Int
  occasion            String            @default("")
  ticketsNeeded       Boolean           @default(false)
  eventId             String
  event               Event             @relation(fields: [eventId], references: [id])
  confirmationState   ConfirmationState @default(REQUESTED)
  tableNumber         String?
  payed               Boolean           @default(false)
  notified            DateTime?
  paymentReminderSent DateTime?
  createdAt           DateTime          @default(now())
}

enum ConfirmationState {
  REQUESTED
  CONFIRMED
  CANCELLED
}
